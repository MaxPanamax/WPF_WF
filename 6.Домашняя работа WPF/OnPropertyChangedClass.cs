using System.ComponentModel;
using System.Runtime.CompilerServices;
//Правила игры
//В каждом раунде появляется плитка номинала «2» (с вероятностью 90 %) или «4» (с вероятностью 10 %)
//Нажатием стрелки игрок может скинуть все плитки игрового поля в одну из 4 сторон. Если при сбрасывании
//две плитки одного номинала «налетают» одна на другую, то они превращаются в одну, номинал которой равен
//сумме соединившихся плиток. После каждого хода на свободной секции поля появляется новая плитка номиналом
//«2» или «4». Если при нажатии кнопки местоположение плиток или их номинал не изменится, то ход не совершается.
//Если в одной строчке или в одном столбце находится более двух плиток одного номинала, то при сбрасывании
//они начинают соединяться с той стороны, в которую были направлены. Например, находящиеся в одной строке
//плитки (4, 4, 4) после хода влево превратятся в (8, 4), а после хода вправо — в (4, 8).
//Данная обработка неоднозначности позволяет более точно формировать стратегию игры.
//За каждое соединение игровые очки увеличиваются на номинал получившейся плитки.
//Игра заканчивается поражением, если после очередного хода невозможно совершить действие.
namespace Ponomarenko_Game2048
{
    /// <summary>Базовый класс с реализацией INPC </summary>
    public abstract class OnPropertyChangedClass : INotifyPropertyChanged
    {
        /// <summary>Событие для извещения об изменения свойства</summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>Метод для вызова события извещения об изменении свойства</summary>
        /// <param name="propertyName">Изменившееся свойство</param>
        public void OnPropertyChanged([CallerMemberName]string propertyName = "") =>
                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
